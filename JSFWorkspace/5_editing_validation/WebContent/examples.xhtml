<ui:composition template="/Templates/maintemplate.xhtml"
				xmlns="http://www.w3.org/1999/xhtml"      
				xmlns:h="http://java.sun.com/jsf/html"
      			xmlns:f="http://java.sun.com/jsf/core"
      			xmlns:ui="http://java.sun.com/jsf/facelets">
<ui:define name="links">
	<link href="CSS/classStyles.css" rel="stylesheet" />
</ui:define>
<ui:define name="content">
	<!-- you can add an onsubmit="return validate();" to the following form tag
	     which will do the javascript validation first and won't call the server
	     side validation if false is returned from the validate function.  There
	     is an example of this in addcourse.xhtml (which links course.js - look
	     at addcourse AND course.js to see some nuances of how this works).
	     In particular notice that course.js uses a different type of syntax
	     to access the names generated by JSF for the inputs - the names are
	     composed from a combination of the form id followed by a colon : followed
	     by the id assigned to the form input -->
	<h:form id="validate">
		<table class="datatable">
			<tr><td align="right">Enter a number: </td>
			    <td><h:inputText id="num" required="true">
						<f:validateLongRange minimum="0" maximum="10" />	
					</h:inputText>
				</td>
				<td><h:messages for="num" styleClass="error" /></td>
			</tr>
			<tr><td align="right">Enter a date: </td>
				<td><h:inputText id="date" required="true">
						<f:validateRegex pattern="^\d{2}\/\d{2}\/\d{4}$" />
					</h:inputText>
				</td>
				<td><h:messages for="date" styleClass="error" /></td>
			</tr>
			<tr><td align="right">Enter an email address: </td>
				<td><h:inputText id="email" required="true" validator="#{validateEmail.validate}" /></td>
				<td><h:messages for="email" styleClass="error" /></td>
			</tr>
			<tr><td></td><td><h:commandButton value="Submit" /></td><td colspan="2"></td></tr>										
		</table>
	</h:form>
</ui:define>
</ui:composition>